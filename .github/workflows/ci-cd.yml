name: CI/CD Pipeline for PetClinic

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: ./mvnw package -DskipTests

      - name: Run tests
        run: ./mvnw test

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: petclinic-jar
          path: target/*.jar

  docker:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: petclinic-jar
          path: target/

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.ACR_LOGIN_SERVER }}/petclinic:${{ github.sha }}
            ${{ secrets.ACR_LOGIN_SERVER }}/petclinic:latest

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get AKS credentials
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ secrets.RESOURCE_GROUP }}
          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}

      - name: Deploy to Kubernetes
        run: |
          # Actualizar archivo YAML con la nueva imagen
          sed -i "s|image:.*petclinic:.*|image: ${{ secrets.ACR_LOGIN_SERVER }}/petclinic:${{ github.sha }}|g" kubernetes/apps/petclinic/deployment.yaml
          
          # Aplicar manifiestos
          kubectl apply -f kubernetes/apps/petclinic/
          kubectl apply -f kubernetes/apps/mysql/
          # Aplicar manifiestos de monitoreo por componente
          kubectl apply -f kubernetes/apps/monitoring/jaeger/
          kubectl apply -f kubernetes/apps/monitoring/otel/
          kubectl apply -f kubernetes/apps/monitoring/prometheus/
          
          # Diagn√≥stico del despliegue
          echo "Verificando estado del despliegue..."
          kubectl get deployments -n petclinic
          kubectl describe deployment petclinic -n petclinic
          kubectl get pods -n petclinic
          kubectl describe pods -n petclinic | grep -i -A 10 "Events: "

      - name: Verify deployment with increased timeout
        run: |
          kubectl rollout status deployment/petclinic -n petclinic --timeout=300s
        continue-on-error: true
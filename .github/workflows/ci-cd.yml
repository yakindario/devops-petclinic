name: CI/CD Pipeline for PetClinic

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  ACR: ${{ secrets.ACR_LOGIN_SERVER }}
  IMAGE_NAME: petclinic

jobs:
  # ───── CI: build & tests ─────
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Build with Maven
        run: ./mvnw clean package -DskipTests

      - name: Run tests
        run: ./mvnw test

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: petclinic-jar
          path: target/*.jar

  # ───── CD (parte 1): Docker build & push ─────
  docker:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: petclinic-jar
          path: target/

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ env.ACR }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.ACR }}/${{ env.IMAGE_NAME }}:latest

    # ───── CD (parte 2): Bump Helm Chart para ArgoCD ─────
  update-deployment:
    needs: docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }} # Token con permisos para push

      - name: Update image tag in deployment
        env:
          SHA: ${{ github.sha }}
          ACR_SERVER: ${{ env.ACR }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
        run: |
          # Configurar Git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Ruta al archivo de deployment que ArgoCD está monitoreando
          DEPLOYMENT_FILE="kubernetes/apps/petclinic/petclinic-deployment.yaml"

          # Actualizar la imagen con la nueva tag
          sed -i "s|image: ${ACR_SERVER}/${IMAGE_NAME}:.*|image: ${ACR_SERVER}/${IMAGE_NAME}:${SHA}|g" $DEPLOYMENT_FILE

          # Commit y push
          git add $DEPLOYMENT_FILE
          git commit -m "ci: actualizar imagen de petclinic a ${SHA}"
          git push
